static void	draw_segment_down(t_segment *seg, t_window *win, int dx, int dy)
{
	int		delta;
	int		p[2];
	int		color;

	p[0] = seg->xi;
	p[1] = seg->yi;
	color = win->color;
	if (seg->color != -1)
		color = seg->color;
	delta = 2 * dy - dx;
	while ((!seg->b && p[0] >= seg->xf) || (seg->b && p[1] <= seg->yf))
	{
		my_mlx_pixel_put(win->image, p[0] + 10, p[1] + 10, color);
		if (delta < 0)
			delta += 2 * dy;
		else
		{
			delta += 2 * (dy - dx);
			!seg->b && p[1]++;
			seg->b && p[0]--;
		}
		!seg->b && p[0]--;
		seg->b && p[1]++;
	}
}



// void	draw_call(t_segment *seg, t_window *win)
// {
// 	int	dx;
// 	int	dy;

// 	dx = abs(seg->xf - seg->xi);
// 	dy = abs(seg->yf - seg->yi);
// 	seg->b = (dx < dy);
// 	if ((seg->xf >= seg->xi) && (dx >= dy))
// 		draw_segment_up(seg, win, dx, dy);
// 	else if (seg->xf >= seg->xi)
// 		draw_segment_up(seg, win, dy, dx);
// 	else if (dx >= dy)
// 		draw_segment_down(seg, win, dx, dy);
// 	else
// 		draw_segment_down(seg, win, dy, dx);
// }